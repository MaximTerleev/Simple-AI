# -*- coding: utf-8 -*-
"""#11 Texts classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ClbxkMNhl2PpTDU5jB_1HX6uHPvZx9ub?usp=sharing

# **Texts classification**


"""

from gensim import corpora, models, similarities
from glob import glob

# Load texts
documents = []
for path in glob('/content/*.txt'):
  f = open(path, 'r')
  documents.append(f.read())
  print('{:<35}{} symbols'.format(path, len(documents[-1])))

# Turn into lists of words
texts = [[word for word in document.lower().split()] for document in documents]
for text in texts:
  print(text)

# Turn into list of vectors
dictionary = corpora.Dictionary(texts)
corpus = [dictionary.doc2bow(text) for text in texts]
for text in corpus:
  print(text)

# Do the semantic and similarity indexing
lsi = models.LsiModel(corpus, id2word=dictionary, num_topics=2)
sims = similarities.MatrixSimilarity(lsi[corpus])
print(sims.index)

# Check similarity
lsied_text = lsi[corpus[-1]]
similarity = sims[lsied_text]
print(similarity)
