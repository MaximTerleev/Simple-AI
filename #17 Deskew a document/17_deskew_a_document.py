# -*- coding: utf-8 -*-
"""#17 Deskew a document

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bpxoFlc7WFCP1UVkGHEYGsZ5IptmlDch?usp=sharing

# **Deskew a document**

"""

from scipy.spatial import distance
import matplotlib.pyplot as plt
from PIL import Image
import numpy as np
import cv2

# Load a skewed document
skewed = np.array(Image.open('skewed.png').convert('RGB'))
h, w, _ = skewed.shape

plt.figure(figsize=(10,15))
plt.imshow(skewed)
plt.axis('off')
plt.show()

# Get marked corners
for i in range(h):
  for j in range(w):
    pixel = skewed[i,j]
    if (pixel == [0, 255, 0]).all():
      if (i < h/2) & (j < w/2):
        upper_left = (i,j)
      elif (i < h/2) & (j > w/2):
        upper_right = (i,j)
      elif (i > h/2) & (j < w/2):
        bottom_left = (i,j)
      elif (i > h/2) & (j > w/2):
        bottom_right = (i,j)

marks = [upper_left, upper_right, bottom_left, bottom_right]
print(marks)

# Deskew
h = round(distance.euclidean(upper_left, bottom_left))
w = round(distance.euclidean(upper_left, upper_right))

src_corners = np.flip(marks, axis=1).astype('float32')
dst_corners = np.float32([(0,0), (w,0), (0,h), (w,h)])

M = cv2.getPerspectiveTransform(src_corners, dst_corners)
deskew = cv2.warpPerspective(skewed, M, (w,h))

# Plot deskewed image
print(deskew.shape)
plt.figure(figsize=(10,15))
plt.imshow(deskew)
plt.axis('off')
plt.show()
